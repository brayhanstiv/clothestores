class Item {
  Item({
    required this.id,
    required this.siteId,
    required this.title,
    required this.seller,
    required this.price,
    required this.prices,
    required this.salePrice,
    required this.currencyId,
    required this.availableQuantity,
    required this.soldQuantity,
    required this.buyingMode,
    required this.listingTypeId,
    required this.stopTime,
    required this.condition,
    required this.permalink,
    required this.thumbnail,
    required this.thumbnailId,
    required this.acceptsMercadopago,
    required this.installments,
    required this.address,
    required this.shipping,
    required this.sellerAddress,
    required this.attributes,
    required this.differentialPricing,
    required this.originalPrice,
    required this.categoryId,
    required this.officialStoreId,
    required this.domainId,
    required this.catalogProductId,
    required this.tags,
    required this.orderBackend,
    required this.useThumbnailId,
  });

  String id,
      siteId,
      title,
      currencyId,
      buyingMode,
      listingTypeId,
      condition,
      permalink,
      thumbnail,
      thumbnailId,
      categoryId,
      domainId;
  Map<String, dynamic> seller,
      prices,
      installments,
      address,
      shipping,
      sellerAddress;
  int price, availableQuantity, soldQuantity, orderBackend;
  dynamic salePrice,
      originalPrice,
      differentialPricing,
      officialStoreId,
      catalogProductId;
  DateTime stopTime;
  bool acceptsMercadopago, useThumbnailId;
  List attributes, tags;

  factory Item.fromJson(Map<String, dynamic> json) => Item(
        id: json["id"],
        siteId: json["site_id"],
        title: json["title"],
        seller: json["seller"],
        price: json["price"],
        prices: json["prices"],
        salePrice: json["sale_price"],
        currencyId: json["currency_id"],
        availableQuantity: json["available_quantity"],
        soldQuantity: json["sold_quantity"],
        buyingMode: json["buying_mode"],
        listingTypeId: json["listing_type_id"],
        stopTime: DateTime.parse(json["stop_time"]),
        condition: json["condition"],
        permalink: json["permalink"],
        thumbnail: json["thumbnail"],
        thumbnailId: json["thumbnail_id"],
        acceptsMercadopago: json["accepts_mercadopago"],
        installments: json["installments"],
        address: json["address"],
        shipping: json["shipping"],
        sellerAddress: json["seller_address"],
        attributes: json["attributes"],
        differentialPricing: json["differential_pricing"],
        originalPrice: json["original_price"],
        categoryId: json["category_id"],
        officialStoreId: json["official_store_id"],
        domainId: json["domain_id"],
        catalogProductId: json["catalog_product_id"],
        tags: json["tags"],
        orderBackend: json["order_backend"],
        useThumbnailId: json["use_thumbnail_id"],
      );

  Map<String, dynamic> toJson() => {
        "id": id,
        "site_id": siteId,
        "title": title,
        "seller": seller,
        "price": price,
        "prices": prices,
        "sale_price": salePrice,
        "currency_id": currencyId,
        "available_quantity": availableQuantity,
        "sold_quantity": soldQuantity,
        "buying_mode": buyingMode,
        "listing_type_id": listingTypeId,
        "stop_time": stopTime.toIso8601String(),
        "condition": condition,
        "permalink": permalink,
        "thumbnail": thumbnail,
        "thumbnail_id": thumbnailId,
        "accepts_mercadopago": acceptsMercadopago,
        "installments": installments,
        "address": address,
        "shipping": shipping,
        "seller_address": sellerAddress,
        "attributes": attributes,
        "differential_pricing": differentialPricing,
        "original_price": originalPrice,
        "category_id": categoryId,
        "official_store_id": officialStoreId,
        "domain_id": domainId,
        "catalog_product_id": catalogProductId,
        "tags": tags,
        "order_backend": orderBackend,
        "use_thumbnail_id": useThumbnailId,
      };
}
